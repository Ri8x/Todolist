name: Deploy

on:
  deployment

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 'deployment pending'
      uses: 'deliverybot/deployment-status@v1'
      with:
        state: 'pending'
        token: '${{ github.token }}'
    - uses: blaadje/github-package-version-bumper@master
      with:
        github-token: ${{ secrets.github_token }}

  deploy:
    needs: [build]
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [12.x]

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Fetch commits
        shell: bash
        run: |
          if [[ $(git rev-parse --abbrev-ref HEAD) == "master" ]];
          then git pull;
          else  
          git fetch;
          git checkout origin/master -- package.json;
          fi;


      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      - name: Electron Builder Action
        uses: samuelmeuli/action-electron-builder@v1.2.0
        with:
          # GitHub authentication token
          github_token: ${{ secrets.github_token }}
          # Base64-encoded code signing certificate for macOS
          # mac_certs: # optional
          # Password for decrypting `mac_certs`
          # mac_certs_password: # optional
          # Whether the app should be released after a successful build
          release: true
          # Base64-encoded code signing certificate for Windows
          # windows_certs: # optional
          # Password for decrypting `windows_certs`
          # windows_certs_password: # optional
          # Directory where NPM/Yarn commands should be run
          # package_root: # optional, default is .
          # Directory where `electron-builder` commands should be run
          # app_root: # optional

      - name: 'deployment success'
        if: success()
        uses: 'deliverybot/deployment-status@v1'
        with:
          state: 'success'
          token: '${{ github.token }}'

      - name: 'deployment failure'
        if: failure()
        uses: 'deliverybot/deployment-status@v1'
        with:
          state: 'failure'
          token: '${{ github.token }}'
